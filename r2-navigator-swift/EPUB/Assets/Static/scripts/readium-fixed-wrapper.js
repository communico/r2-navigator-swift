(()=>{var __webpack_modules__={653:()=>{eval('//\n//  Copyright 2021 Readium Foundation. All rights reserved.\n//  Use of this source code is governed by the BSD-style license\n//  available in the top-level LICENSE file of the project.\n//\n\n// Script used for the wrapper HTML pages of fixed layouts resources.\n\nreadium.FixedPage = function (iframeId) {\n  // Fixed dimensions for the page, extracted from the viewport meta tag.\n  var _pageSize = null;\n  // Available viewport size to fill with the resource.\n  var _viewportSize = null;\n  // Margins that should not overlap the content.\n  var _safeAreaInsets = null;\n\n  // iFrame containing the page.\n  var _iframe = document.getElementById(iframeId);\n  _iframe.addEventListener("load", loadPageSize);\n\n  // Viewport element containing the iFrame.\n  var _viewport = _iframe.closest(".viewport");\n\n  // Parses the page size from the viewport meta tag of the loaded resource.\n  function loadPageSize() {\n    var viewport = _iframe.contentWindow.document.querySelector(\n      "meta[name=viewport]"\n    );\n    if (!viewport) {\n      return;\n    }\n    var regex = /(\\w+) *= *([^\\s,]+)/g;\n    var properties = {};\n    var match;\n    while ((match = regex.exec(viewport.content))) {\n      properties[match[1]] = match[2];\n    }\n    var width = Number.parseFloat(properties.width);\n    var height = Number.parseFloat(properties.height);\n    if (width && height) {\n      _pageSize = { width: width, height: height };\n      layoutPage();\n    }\n  }\n\n  // Layouts the page iframe to center its content and scale it to fill the available viewport.\n  function layoutPage() {\n    if (!_pageSize || !_viewportSize || !_safeAreaInsets) {\n      return;\n    }\n\n    _iframe.style.width = _pageSize.width + "px";\n    _iframe.style.height = _pageSize.height + "px";\n    _iframe.style.marginTop =\n      _safeAreaInsets.top - _safeAreaInsets.bottom + "px";\n    _iframe.style.marginLeft =\n      _safeAreaInsets.left - _safeAreaInsets.right + "px";\n\n    // Calculates the zoom scale required to fit the content to the viewport.\n    var widthRatio = _viewportSize.width / _pageSize.width;\n    var heightRatio = _viewportSize.height / _pageSize.height;\n    var scale = Math.min(widthRatio, heightRatio);\n\n    // Sets the viewport of the wrapper page (this page) to scale the iframe.\n    var viewport = document.querySelector("meta[name=viewport]");\n    viewport.content = "initial-scale=" + scale + ", minimum-scale=" + scale;\n  }\n\n  return {\n    // Returns whether the page is currently loading its contents.\n    isLoading: false,\n\n    // Href of the resource currently loaded in the page.\n    href: null,\n\n    // Loads the given link ({href, url}) in the page.\n    load: function (link, completion) {\n      if (!link.href || !link.url) {\n        if (completion) {\n          completion();\n        }\n        return;\n      }\n\n      var page = this;\n      page.href = link.href;\n      page.isLoading = true;\n\n      function loaded() {\n        _iframe.removeEventListener("load", loaded);\n\n        // Waiting for the next animation frame seems to do the trick to make sure the page is fully rendered.\n        _iframe.contentWindow.requestAnimationFrame(function () {\n          page.isLoading = false;\n          if (completion) {\n            completion();\n          }\n        });\n      }\n\n      _iframe.addEventListener("load", loaded);\n      _iframe.src = link.url;\n    },\n\n    // Resets the page and empty its contents.\n    reset: function () {\n      if (!this.href) {\n        return;\n      }\n      this.href = null;\n      _pageSize = null;\n      _iframe.src = "about:blank";\n    },\n\n    // Evaluates a script in the context of the page.\n    eval: function (script) {\n      if (!this.href || this.isLoading) {\n        return;\n      }\n      return _iframe.contentWindow.eval(script);\n    },\n\n    // Updates the available viewport to display the resource.\n    setViewport: function (viewportSize, safeAreaInsets) {\n      _viewportSize = viewportSize;\n      _safeAreaInsets = safeAreaInsets;\n      layoutPage();\n    },\n\n    // Shows the page\'s viewport.\n    show: function () {\n      _viewport.style.display = "block";\n    },\n\n    // Hides the page\'s viewport.\n    hide: function () {\n      _viewport.style.display = "none";\n    },\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFkaXVtLWpzLy4vc3JjL2luZGV4LWZpeGVkLXdyYXBwZXIuanM/NzM2NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLDhCQUE4QixVQUFVO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJmaWxlIjoiNjUzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy9cbi8vICBDb3B5cmlnaHQgMjAyMSBSZWFkaXVtIEZvdW5kYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyAgVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgdGhlIEJTRC1zdHlsZSBsaWNlbnNlXG4vLyAgYXZhaWxhYmxlIGluIHRoZSB0b3AtbGV2ZWwgTElDRU5TRSBmaWxlIG9mIHRoZSBwcm9qZWN0LlxuLy9cblxuLy8gU2NyaXB0IHVzZWQgZm9yIHRoZSB3cmFwcGVyIEhUTUwgcGFnZXMgb2YgZml4ZWQgbGF5b3V0cyByZXNvdXJjZXMuXG5cbnJlYWRpdW0uRml4ZWRQYWdlID0gZnVuY3Rpb24gKGlmcmFtZUlkKSB7XG4gIC8vIEZpeGVkIGRpbWVuc2lvbnMgZm9yIHRoZSBwYWdlLCBleHRyYWN0ZWQgZnJvbSB0aGUgdmlld3BvcnQgbWV0YSB0YWcuXG4gIHZhciBfcGFnZVNpemUgPSBudWxsO1xuICAvLyBBdmFpbGFibGUgdmlld3BvcnQgc2l6ZSB0byBmaWxsIHdpdGggdGhlIHJlc291cmNlLlxuICB2YXIgX3ZpZXdwb3J0U2l6ZSA9IG51bGw7XG4gIC8vIE1hcmdpbnMgdGhhdCBzaG91bGQgbm90IG92ZXJsYXAgdGhlIGNvbnRlbnQuXG4gIHZhciBfc2FmZUFyZWFJbnNldHMgPSBudWxsO1xuXG4gIC8vIGlGcmFtZSBjb250YWluaW5nIHRoZSBwYWdlLlxuICB2YXIgX2lmcmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlmcmFtZUlkKTtcbiAgX2lmcmFtZS5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBsb2FkUGFnZVNpemUpO1xuXG4gIC8vIFZpZXdwb3J0IGVsZW1lbnQgY29udGFpbmluZyB0aGUgaUZyYW1lLlxuICB2YXIgX3ZpZXdwb3J0ID0gX2lmcmFtZS5jbG9zZXN0KFwiLnZpZXdwb3J0XCIpO1xuXG4gIC8vIFBhcnNlcyB0aGUgcGFnZSBzaXplIGZyb20gdGhlIHZpZXdwb3J0IG1ldGEgdGFnIG9mIHRoZSBsb2FkZWQgcmVzb3VyY2UuXG4gIGZ1bmN0aW9uIGxvYWRQYWdlU2l6ZSgpIHtcbiAgICB2YXIgdmlld3BvcnQgPSBfaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgIFwibWV0YVtuYW1lPXZpZXdwb3J0XVwiXG4gICAgKTtcbiAgICBpZiAoIXZpZXdwb3J0KSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHZhciByZWdleCA9IC8oXFx3KykgKj0gKihbXlxccyxdKykvZztcbiAgICB2YXIgcHJvcGVydGllcyA9IHt9O1xuICAgIHZhciBtYXRjaDtcbiAgICB3aGlsZSAoKG1hdGNoID0gcmVnZXguZXhlYyh2aWV3cG9ydC5jb250ZW50KSkpIHtcbiAgICAgIHByb3BlcnRpZXNbbWF0Y2hbMV1dID0gbWF0Y2hbMl07XG4gICAgfVxuICAgIHZhciB3aWR0aCA9IE51bWJlci5wYXJzZUZsb2F0KHByb3BlcnRpZXMud2lkdGgpO1xuICAgIHZhciBoZWlnaHQgPSBOdW1iZXIucGFyc2VGbG9hdChwcm9wZXJ0aWVzLmhlaWdodCk7XG4gICAgaWYgKHdpZHRoICYmIGhlaWdodCkge1xuICAgICAgX3BhZ2VTaXplID0geyB3aWR0aDogd2lkdGgsIGhlaWdodDogaGVpZ2h0IH07XG4gICAgICBsYXlvdXRQYWdlKCk7XG4gICAgfVxuICB9XG5cbiAgLy8gTGF5b3V0cyB0aGUgcGFnZSBpZnJhbWUgdG8gY2VudGVyIGl0cyBjb250ZW50IGFuZCBzY2FsZSBpdCB0byBmaWxsIHRoZSBhdmFpbGFibGUgdmlld3BvcnQuXG4gIGZ1bmN0aW9uIGxheW91dFBhZ2UoKSB7XG4gICAgaWYgKCFfcGFnZVNpemUgfHwgIV92aWV3cG9ydFNpemUgfHwgIV9zYWZlQXJlYUluc2V0cykge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIF9pZnJhbWUuc3R5bGUud2lkdGggPSBfcGFnZVNpemUud2lkdGggKyBcInB4XCI7XG4gICAgX2lmcmFtZS5zdHlsZS5oZWlnaHQgPSBfcGFnZVNpemUuaGVpZ2h0ICsgXCJweFwiO1xuICAgIF9pZnJhbWUuc3R5bGUubWFyZ2luVG9wID1cbiAgICAgIF9zYWZlQXJlYUluc2V0cy50b3AgLSBfc2FmZUFyZWFJbnNldHMuYm90dG9tICsgXCJweFwiO1xuICAgIF9pZnJhbWUuc3R5bGUubWFyZ2luTGVmdCA9XG4gICAgICBfc2FmZUFyZWFJbnNldHMubGVmdCAtIF9zYWZlQXJlYUluc2V0cy5yaWdodCArIFwicHhcIjtcblxuICAgIC8vIENhbGN1bGF0ZXMgdGhlIHpvb20gc2NhbGUgcmVxdWlyZWQgdG8gZml0IHRoZSBjb250ZW50IHRvIHRoZSB2aWV3cG9ydC5cbiAgICB2YXIgd2lkdGhSYXRpbyA9IF92aWV3cG9ydFNpemUud2lkdGggLyBfcGFnZVNpemUud2lkdGg7XG4gICAgdmFyIGhlaWdodFJhdGlvID0gX3ZpZXdwb3J0U2l6ZS5oZWlnaHQgLyBfcGFnZVNpemUuaGVpZ2h0O1xuICAgIHZhciBzY2FsZSA9IE1hdGgubWluKHdpZHRoUmF0aW8sIGhlaWdodFJhdGlvKTtcblxuICAgIC8vIFNldHMgdGhlIHZpZXdwb3J0IG9mIHRoZSB3cmFwcGVyIHBhZ2UgKHRoaXMgcGFnZSkgdG8gc2NhbGUgdGhlIGlmcmFtZS5cbiAgICB2YXIgdmlld3BvcnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwibWV0YVtuYW1lPXZpZXdwb3J0XVwiKTtcbiAgICB2aWV3cG9ydC5jb250ZW50ID0gXCJpbml0aWFsLXNjYWxlPVwiICsgc2NhbGUgKyBcIiwgbWluaW11bS1zY2FsZT1cIiArIHNjYWxlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICAvLyBSZXR1cm5zIHdoZXRoZXIgdGhlIHBhZ2UgaXMgY3VycmVudGx5IGxvYWRpbmcgaXRzIGNvbnRlbnRzLlxuICAgIGlzTG9hZGluZzogZmFsc2UsXG5cbiAgICAvLyBIcmVmIG9mIHRoZSByZXNvdXJjZSBjdXJyZW50bHkgbG9hZGVkIGluIHRoZSBwYWdlLlxuICAgIGhyZWY6IG51bGwsXG5cbiAgICAvLyBMb2FkcyB0aGUgZ2l2ZW4gbGluayAoe2hyZWYsIHVybH0pIGluIHRoZSBwYWdlLlxuICAgIGxvYWQ6IGZ1bmN0aW9uIChsaW5rLCBjb21wbGV0aW9uKSB7XG4gICAgICBpZiAoIWxpbmsuaHJlZiB8fCAhbGluay51cmwpIHtcbiAgICAgICAgaWYgKGNvbXBsZXRpb24pIHtcbiAgICAgICAgICBjb21wbGV0aW9uKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgcGFnZSA9IHRoaXM7XG4gICAgICBwYWdlLmhyZWYgPSBsaW5rLmhyZWY7XG4gICAgICBwYWdlLmlzTG9hZGluZyA9IHRydWU7XG5cbiAgICAgIGZ1bmN0aW9uIGxvYWRlZCgpIHtcbiAgICAgICAgX2lmcmFtZS5yZW1vdmVFdmVudExpc3RlbmVyKFwibG9hZFwiLCBsb2FkZWQpO1xuXG4gICAgICAgIC8vIFdhaXRpbmcgZm9yIHRoZSBuZXh0IGFuaW1hdGlvbiBmcmFtZSBzZWVtcyB0byBkbyB0aGUgdHJpY2sgdG8gbWFrZSBzdXJlIHRoZSBwYWdlIGlzIGZ1bGx5IHJlbmRlcmVkLlxuICAgICAgICBfaWZyYW1lLmNvbnRlbnRXaW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICBwYWdlLmlzTG9hZGluZyA9IGZhbHNlO1xuICAgICAgICAgIGlmIChjb21wbGV0aW9uKSB7XG4gICAgICAgICAgICBjb21wbGV0aW9uKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgX2lmcmFtZS5hZGRFdmVudExpc3RlbmVyKFwibG9hZFwiLCBsb2FkZWQpO1xuICAgICAgX2lmcmFtZS5zcmMgPSBsaW5rLnVybDtcbiAgICB9LFxuXG4gICAgLy8gUmVzZXRzIHRoZSBwYWdlIGFuZCBlbXB0eSBpdHMgY29udGVudHMuXG4gICAgcmVzZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICghdGhpcy5ocmVmKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHRoaXMuaHJlZiA9IG51bGw7XG4gICAgICBfcGFnZVNpemUgPSBudWxsO1xuICAgICAgX2lmcmFtZS5zcmMgPSBcImFib3V0OmJsYW5rXCI7XG4gICAgfSxcblxuICAgIC8vIEV2YWx1YXRlcyBhIHNjcmlwdCBpbiB0aGUgY29udGV4dCBvZiB0aGUgcGFnZS5cbiAgICBldmFsOiBmdW5jdGlvbiAoc2NyaXB0KSB7XG4gICAgICBpZiAoIXRoaXMuaHJlZiB8fCB0aGlzLmlzTG9hZGluZykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICByZXR1cm4gX2lmcmFtZS5jb250ZW50V2luZG93LmV2YWwoc2NyaXB0KTtcbiAgICB9LFxuXG4gICAgLy8gVXBkYXRlcyB0aGUgYXZhaWxhYmxlIHZpZXdwb3J0IHRvIGRpc3BsYXkgdGhlIHJlc291cmNlLlxuICAgIHNldFZpZXdwb3J0OiBmdW5jdGlvbiAodmlld3BvcnRTaXplLCBzYWZlQXJlYUluc2V0cykge1xuICAgICAgX3ZpZXdwb3J0U2l6ZSA9IHZpZXdwb3J0U2l6ZTtcbiAgICAgIF9zYWZlQXJlYUluc2V0cyA9IHNhZmVBcmVhSW5zZXRzO1xuICAgICAgbGF5b3V0UGFnZSgpO1xuICAgIH0sXG5cbiAgICAvLyBTaG93cyB0aGUgcGFnZSdzIHZpZXdwb3J0LlxuICAgIHNob3c6IGZ1bmN0aW9uICgpIHtcbiAgICAgIF92aWV3cG9ydC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgIH0sXG5cbiAgICAvLyBIaWRlcyB0aGUgcGFnZSdzIHZpZXdwb3J0LlxuICAgIGhpZGU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIF92aWV3cG9ydC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgfSxcbiAgfTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///653\n')}},__webpack_exports__={};__webpack_modules__[653]()})();